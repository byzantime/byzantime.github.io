<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hugo Baldwin</title>
    <link>http://byzantime.github.io/post/</link>
    <description>Recent content in Posts on Hugo Baldwin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Sat, 27 Feb 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://byzantime.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Installing Apache Cordova on BunsenLabs Linux</title>
      <link>http://byzantime.github.io/post/2016-02-27/</link>
      <pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://byzantime.github.io/post/2016-02-27/</guid>
      <description>&lt;p&gt;Installing &lt;a href=&#34;http://cordova.apache.org/&#34;&gt;Cordova&lt;/a&gt; wasn&amp;rsquo;t straightforward, so I wrote up what worked for me.&lt;/p&gt;

&lt;p&gt;First &lt;a href=&#34;https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions&#34;&gt;install Nodejs&lt;/a&gt; and create a symlink because it gets installed as nodejs rather than node.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -
sudo apt-get install -y nodejs
sudo ln -s /usr/bin/nodejs /usr/bin/node
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;NPM is thankfully in the debian repos:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install npm
sudo apt-get install -y build-essential
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install Cordova using NPM and &lt;a href=&#34;http://cordova.apache.org/docs/en/latest/guide/cli/index.html&#34;&gt;create your first project&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo npm install -g cordova 

cordova create MyProject
&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;cd&lt;/span&gt; MyProject

platform add browser
platform add android
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;cordova run browser&lt;/code&gt; command requires &lt;code&gt;google-chrome&lt;/code&gt; so I installed chromium then symlinked google-chrome to it (you can skip this step if you use Chrome):&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install chromium
sudo ln -s /usr/bin/chromium /usr/bin/google-chrome
cordova run browser
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ta-da!  You can now see your project running in the browser, such as it is.&lt;/p&gt;

&lt;p&gt;Install the &lt;a href=&#34;http://developer.android.com/sdk/installing/index.html&#34;&gt;Android Stand-Alone SDK tools&lt;/a&gt;, then set the ANDROID_HOME environment variable and add the Android tools to your PATH:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;nano ~/.bash_profile
&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;ANDROID_HOME&lt;/span&gt;=~/bin/android-sdk-linux
&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;PATH&lt;/span&gt;=$PATH:&lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;$A&lt;/span&gt;NDROID_HOME/tools
&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;source&lt;/span&gt; ~/.bash_profile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;While &lt;a href=&#34;https://help.ubuntu.com/community/EnvironmentVariables&#34;&gt;this article was helpful&lt;/a&gt; I was ultimately unable to make the new environment variables persist over reboots, no matter which file I added them to (.bash_profile, .profile, .pam_environment, etc).&lt;/p&gt;

&lt;p&gt;Now try and build your new app:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;cordova build
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;If you get an error about being unable to run &lt;code&gt;java -version&lt;/code&gt;, you may need to install the JDK and add the JAVA_HOME environment variable:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install default-jdk
&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;JAVA_HOME&lt;/span&gt;=/path/to/jvm/
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;If you get the following error:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;:CordovaLib:processDebugResources FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task &amp;#39;:CordovaLib:processDebugResources&amp;#39;.
&amp;gt; A problem occurred starting process &amp;#39;command &amp;#39;/home/windlab/bin/android-sdk-linux/build-tools/23.0.2/aapt&amp;#39;&amp;#39;

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.

BUILD FAILED

Total time: 2.785 secs
ERROR building one of the platforms: Error code 1 for command: /home/windlab/projects/AlarmClock/platforms/android/gradlew with args: cdvBuildDebug,-b,/home/windlab/projects/AlarmClock/platforms/android/build.gradle,-Dorg.gradle.daemon=true,-Pandroid.useDeprecatedNdk=true
You may not have the required environment or OS to build this project
Error: Error code 1 for command: /home/windlab/projects/AlarmClock/platforms/android/gradlew with args: cdvBuildDebug,-b,/home/windlab/projects/AlarmClock/platforms/android/build.gradle,-Dorg.gradle.daemon=true,-Pandroid.useDeprecatedNdk=true
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s because you&amp;rsquo;re trying to run a 32bit file on 64bit system.  &lt;a href=&#34;http://stackoverflow.com/a/27734148&#34;&gt;Thanks Abdelraman Elkady&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install lib32stdc++6
sudo apt-get install lib32z1
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Finally, run the following command to display your new app in the Android emulator (if you haven&amp;rsquo;t created one already the error surprisingly gives useful instructions):&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;cordova emulate android
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Calling the Top</title>
      <link>http://byzantime.github.io/post/2014-11-13/</link>
      <pubDate>Wed, 12 Nov 2014 22:41:00 +0000</pubDate>
      
      <guid>http://byzantime.github.io/post/2014-11-13/</guid>
      <description>&lt;p&gt;Some time mid-2013 I was reading through &lt;a href=&#34;https://bitcointalk.org/index.php?action=profile;u=68520;sa=showPosts&#34;&gt;rpietila&amp;rsquo;s posts&lt;/a&gt; on the bitcointalk.org forums and came across the theory that you could &amp;ldquo;call the top&amp;rdquo; of a bubble simply by selling if the price doubles in 7 days.&lt;/p&gt;

&lt;p&gt;Unfortunately, he&amp;rsquo;s got 4.7k-odd posts now, so the exact post has eluded me so far.&lt;/p&gt;

&lt;p&gt;While the old trope &amp;ldquo;past performance doesn&amp;rsquo;t indicate future results&amp;rdquo; always applies, there&amp;rsquo;s no harm in being prepared to take advantage of an identified pattern should it manifest again.&lt;/p&gt;

&lt;p&gt;For an example from the most recent doubling-in-7-days, see this chart of the Nov 2013 run up to Dec 31st peak, where 7-day price doublings can be seen twice:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://bitcoincharts.com/charts/chart.png?width=940&amp;amp;m=bitstampUSD&amp;amp;SubmitButton=Draw&amp;amp;r=360&amp;amp;i=6-hour&amp;amp;c=1&amp;amp;s=2013-11-03&amp;amp;e=2013-12-05&amp;amp;Prev=&amp;amp;Next=&amp;amp;t=O&amp;amp;b=&amp;amp;a1=&amp;amp;m1=10&amp;amp;a2=&amp;amp;m2=25&amp;amp;x=0&amp;amp;i1=&amp;amp;i2=&amp;amp;i3=&amp;amp;i4=&amp;amp;v=0&amp;amp;cv=0&amp;amp;ps=0&amp;amp;l=0&amp;amp;p=0&amp;amp;&#34; alt=&#34;recent 7day doubling example&#34; /&gt;
&lt;a href=&#34;http://bitcoincharts.com/charts/bitstampUSD#rg360zig6-hourzczsg2013-11-03zeg2013-12-05ztgOzm1g10zm2g25&#34;&gt;Bitcoin charts link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In light of the recent upward price movement (THIS IS GENTLEMEN), the topic seemed apposite, so I whipped up a script to test the theory:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# if bitcoin price on Bitstamp doubles within a 7-day timeframe, sell&lt;/span&gt;

&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;datetime&lt;/span&gt; &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; datetime &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;as&lt;/span&gt; dt
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;datetime&lt;/span&gt; &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; timedelta
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;hashlib&lt;/span&gt;
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;hmac&lt;/span&gt;
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;json&lt;/span&gt;
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; sleep
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;requests&lt;/span&gt;


URL = &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;https://www.bitstamp.net/api/&amp;#39;&lt;/span&gt;
seven_day_history = []

CLIENT_ID = 0
API_KEY = &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#39;&lt;/span&gt;
API_SECRET = &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#39;&lt;/span&gt;


&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;get_nonce&lt;/span&gt;():
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;int&lt;/span&gt;((dt.utcnow() - dt(1970, 1, 1)).total_seconds())


&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;make_request&lt;/span&gt;(path=&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;None&lt;/span&gt;, data=&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;None&lt;/span&gt;):
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;try&lt;/span&gt;:
        r = requests.post(URL+path, data)
        r.raise_for_status()
        &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;return&lt;/span&gt; json.loads(r.text)
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;except&lt;/span&gt; Exception &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;as&lt;/span&gt; e:
        &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;print&lt;/span&gt; e

&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;make_private_request&lt;/span&gt;(path=&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;None&lt;/span&gt;, parameters=&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;None&lt;/span&gt;):
    nonce = get_nonce()
    message = &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;{}{}{}&amp;#39;&lt;/span&gt;.format(nonce, CLIENT_ID, API_KEY)
    signature = hmac.new(
        API_SECRET, msg=message, digestmod=hashlib.sha256).hexdigest().upper()

    data = {&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;: API_KEY, &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;signature&amp;#39;&lt;/span&gt;: signature, &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;nonce&amp;#39;&lt;/span&gt;: nonce}
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;if&lt;/span&gt; parameters: data.update(parameters)

    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;return&lt;/span&gt; make_request(path=path, data=data)


&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;while&lt;/span&gt; 1:
    ticker = make_request(path=&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;ticker/&amp;#39;&lt;/span&gt;)
    now = dt.utcnow()

    &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# append time stamp and price of bitcoin to list&lt;/span&gt;
    seven_day_history.append((now, &lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;float&lt;/span&gt;(ticker[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;bid&amp;#39;&lt;/span&gt;])))

    &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# remove items older than 7 days&lt;/span&gt;
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;font-weight: bold&#34;&gt;in&lt;/span&gt; seven_day_history:
        &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;if&lt;/span&gt; i[0] &amp;lt; now-timedelta(days=7):
            seven_day_history.remove(i)

    d1_price = seven_day_history[0][1]
    d7_price = seven_day_history[-1][1]

    &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# sell all available bitcoin if price doubled in last 7 days&lt;/span&gt;
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;if&lt;/span&gt; d7_price &amp;gt;= d1_price*2:

        balance = make_private_request(path=&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;balance/&amp;#39;&lt;/span&gt;)
        xbt_available = balance[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;btc_available&amp;#39;&lt;/span&gt;]

        &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# place limit order at price of highest bid&lt;/span&gt;
        sell = make_private_request(path=&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;sell/&amp;#39;&lt;/span&gt;,
                                    parameters={&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;: xbt_available,
                                                &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;: d7_price})

        &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;{}: Placed order id {} to sell {} XBT at {} each.&amp;#39;&lt;/span&gt;.format(
            sell[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;], sell[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], sell[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;], sell[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;])

    &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# sleep for 12 hours&lt;/span&gt;
    sleep(43200)
&lt;/pre&gt;&lt;/div&gt;

&lt;a href=&#34;https://gist.github.com/byzantime/2bcacc490ec96ed483a5&#34;&gt;View on Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use this, you will need a funded Bitstamp account with an API key setup allowing the script to query balance and place sell orders.
Suggested improvements would include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;increasing the price checking frequency - &lt;code&gt;sleep(21600)&lt;/code&gt; would give you a 6hr resolution&lt;/li&gt;
&lt;li&gt;message logging / email sending&lt;/li&gt;
&lt;li&gt;replace scheduling by running script as cron job, with celery, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mandatory disclaimer:
The code is licensed under the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt; and does not claim to be fit for any purpose.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>blogging with Pelican and Github pages</title>
      <link>http://byzantime.github.io/post/2014-11-12/</link>
      <pubDate>Wed, 12 Nov 2014 21:40:00 +0000</pubDate>
      
      <guid>http://byzantime.github.io/post/2014-11-12/</guid>
      <description>&lt;p&gt;Hey! Welcome to my new blog.&lt;/p&gt;

&lt;p&gt;So, when it came to setting up a blog again, I didn&amp;rsquo;t want to go the old route to Livejournal / Blogger / Tumblr.  Too much Y2K, Google, and teenage girl angst, respectively.
Svbtle &amp;amp; Ghost cost money, and Medium&amp;rsquo;s focus is on the platform, not you.  That&amp;rsquo;s when I remembered Github pages allows you to setup a free static site.&lt;/p&gt;

&lt;p&gt;First create a &lt;a href=&#34;https://github.com/new&#34;&gt;new Github pages repo&lt;/a&gt; called &lt;em&gt;username&lt;/em&gt;.github.io, where &lt;em&gt;username&lt;/em&gt; is your Github username.
Create a new folder locally to store the site files (I like to keep website files tidy in &lt;code&gt;/var/www/&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;mkdir /var/www/username.github.io
&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;cd&lt;/span&gt; /var/www/username.github.io
git clone https://github.com/username/username.github.io
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To save time on building a site, I first tried using &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, but found the instructions unclear and the setup seemed needlessly complex.  Apart from that, why is it so difficult to install anything Node related on Debian (though a friend has the same issue on Fedora, so maybe it&amp;rsquo;s a Node thing)?&lt;/p&gt;

&lt;p&gt;Then I found &lt;a href=&#34;http://blog.getpelican.com/&#34;&gt;Pelican&lt;/a&gt;, which allows you to write content using markdown and renders site templates into HTML using &lt;a href=&#34;http://jinja.pocoo.org/&#34;&gt;Jinja&lt;/a&gt;.  It&amp;rsquo;s also much easier to install and get running!&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;pip install pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Site content goes in a &lt;code&gt;content/&lt;/code&gt; folder inside the pelican install directory, and individual pages start with simple metadata:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;Title: My super title
Date: 2010-12-03 10:20
Modified: 2010-12-05 19:30
Category: Python
Tags: pelican, publishing
Slug: my-super-post
Authors: Alexis Metaireau, Conan Doyle
Summary: Short version for index and feeds

This is the content of my super blog post.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To preview the site locally, run a Python web server, then check &lt;a href=&#34;http://localhost:8000&#34;&gt;localhost:8000&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;cd&lt;/span&gt; output
python -m SimpleHTTPServer
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;To publish your content live, back in the main site directory run the following commands:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;pelican
&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;cd&lt;/span&gt; output
git add --all
git commit -m &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;quot;my first commit&amp;quot;&lt;/span&gt;
git push
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Of course, there&amp;rsquo;s lots of other things you can do, like changing or customising the default theme.  &lt;a href=&#34;http://docs.getpelican.com/en/3.5.0/&#34;&gt;Read the docs here&lt;/a&gt; (wish more projects used &lt;a href=&#34;https://readthedocs.org/&#34;&gt;read the docs&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>