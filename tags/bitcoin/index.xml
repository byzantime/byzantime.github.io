<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bitcoin on Hugo Baldwin</title>
    <link>http://byzantime.github.io/tags/bitcoin/</link>
    <description>Recent content in Bitcoin on Hugo Baldwin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Wed, 12 Nov 2014 22:41:00 +0000</lastBuildDate>
    <atom:link href="http://byzantime.github.io/tags/bitcoin/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Calling the Top</title>
      <link>http://byzantime.github.io/post/2014-11-13/</link>
      <pubDate>Wed, 12 Nov 2014 22:41:00 +0000</pubDate>
      
      <guid>http://byzantime.github.io/post/2014-11-13/</guid>
      <description>&lt;p&gt;Some time mid-2013 I was reading through &lt;a href=&#34;https://bitcointalk.org/index.php?action=profile;u=68520;sa=showPosts&#34;&gt;rpietila&amp;rsquo;s posts&lt;/a&gt; on the bitcointalk.org forums and came across the theory that you could &amp;ldquo;call the top&amp;rdquo; of a bubble simply by selling if the price doubles in 7 days.&lt;/p&gt;

&lt;p&gt;Unfortunately, he&amp;rsquo;s got 4.7k-odd posts now, so the exact post has eluded me so far.&lt;/p&gt;

&lt;p&gt;While the old trope &amp;ldquo;past performance doesn&amp;rsquo;t indicate future results&amp;rdquo; always applies, there&amp;rsquo;s no harm in being prepared to take advantage of an identified pattern should it manifest again.&lt;/p&gt;

&lt;p&gt;For an example from the most recent doubling-in-7-days, see this chart of the Nov 2013 run up to Dec 31st peak, where 7-day price doublings can be seen twice:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://bitcoincharts.com/charts/chart.png?width=940&amp;amp;m=bitstampUSD&amp;amp;SubmitButton=Draw&amp;amp;r=360&amp;amp;i=6-hour&amp;amp;c=1&amp;amp;s=2013-11-03&amp;amp;e=2013-12-05&amp;amp;Prev=&amp;amp;Next=&amp;amp;t=O&amp;amp;b=&amp;amp;a1=&amp;amp;m1=10&amp;amp;a2=&amp;amp;m2=25&amp;amp;x=0&amp;amp;i1=&amp;amp;i2=&amp;amp;i3=&amp;amp;i4=&amp;amp;v=0&amp;amp;cv=0&amp;amp;ps=0&amp;amp;l=0&amp;amp;p=0&amp;amp;&#34; alt=&#34;recent 7day doubling example&#34; /&gt;
&lt;a href=&#34;http://bitcoincharts.com/charts/bitstampUSD#rg360zig6-hourzczsg2013-11-03zeg2013-12-05ztgOzm1g10zm2g25&#34;&gt;Bitcoin charts link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In light of the recent upward price movement (THIS IS GENTLEMEN), the topic seemed apposite, so I whipped up a script to test the theory:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# if bitcoin price on Bitstamp doubles within a 7-day timeframe, sell&lt;/span&gt;

&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;datetime&lt;/span&gt; &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; datetime &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;as&lt;/span&gt; dt
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;datetime&lt;/span&gt; &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; timedelta
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;hashlib&lt;/span&gt;
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;hmac&lt;/span&gt;
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;json&lt;/span&gt;
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; sleep
&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;requests&lt;/span&gt;


URL = &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;https://www.bitstamp.net/api/&amp;#39;&lt;/span&gt;
seven_day_history = []

CLIENT_ID = 0
API_KEY = &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#39;&lt;/span&gt;
API_SECRET = &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#39;&lt;/span&gt;


&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;get_nonce&lt;/span&gt;():
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;int&lt;/span&gt;((dt.utcnow() - dt(1970, 1, 1)).total_seconds())


&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;make_request&lt;/span&gt;(path=&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;None&lt;/span&gt;, data=&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;None&lt;/span&gt;):
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;try&lt;/span&gt;:
        r = requests.post(URL+path, data)
        r.raise_for_status()
        &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;return&lt;/span&gt; json.loads(r.text)
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;except&lt;/span&gt; Exception &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;as&lt;/span&gt; e:
        &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;print&lt;/span&gt; e

&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #666666; font-weight: bold; font-style: italic&#34;&gt;make_private_request&lt;/span&gt;(path=&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;None&lt;/span&gt;, parameters=&lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;None&lt;/span&gt;):
    nonce = get_nonce()
    message = &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;{}{}{}&amp;#39;&lt;/span&gt;.format(nonce, CLIENT_ID, API_KEY)
    signature = hmac.new(
        API_SECRET, msg=message, digestmod=hashlib.sha256).hexdigest().upper()

    data = {&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;: API_KEY, &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;signature&amp;#39;&lt;/span&gt;: signature, &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;nonce&amp;#39;&lt;/span&gt;: nonce}
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;if&lt;/span&gt; parameters: data.update(parameters)

    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;return&lt;/span&gt; make_request(path=path, data=data)


&lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;while&lt;/span&gt; 1:
    ticker = make_request(path=&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;ticker/&amp;#39;&lt;/span&gt;)
    now = dt.utcnow()

    &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# append time stamp and price of bitcoin to list&lt;/span&gt;
    seven_day_history.append((now, &lt;span style=&#34;font-weight: bold; font-style: italic&#34;&gt;float&lt;/span&gt;(ticker[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;bid&amp;#39;&lt;/span&gt;])))

    &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# remove items older than 7 days&lt;/span&gt;
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;font-weight: bold&#34;&gt;in&lt;/span&gt; seven_day_history:
        &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;if&lt;/span&gt; i[0] &amp;lt; now-timedelta(days=7):
            seven_day_history.remove(i)

    d1_price = seven_day_history[0][1]
    d7_price = seven_day_history[-1][1]

    &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# sell all available bitcoin if price doubled in last 7 days&lt;/span&gt;
    &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;if&lt;/span&gt; d7_price &amp;gt;= d1_price*2:

        balance = make_private_request(path=&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;balance/&amp;#39;&lt;/span&gt;)
        xbt_available = balance[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;btc_available&amp;#39;&lt;/span&gt;]

        &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# place limit order at price of highest bid&lt;/span&gt;
        sell = make_private_request(path=&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;sell/&amp;#39;&lt;/span&gt;,
                                    parameters={&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;: xbt_available,
                                                &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;: d7_price})

        &lt;span style=&#34;font-weight: bold; text-decoration: underline&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;{}: Placed order id {} to sell {} XBT at {} each.&amp;#39;&lt;/span&gt;.format(
            sell[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;], sell[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;], sell[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;amount&amp;#39;&lt;/span&gt;], sell[&lt;span style=&#34;color: #666666; font-style: italic&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;])

    &lt;span style=&#34;color: #888888; font-style: italic&#34;&gt;# sleep for 12 hours&lt;/span&gt;
    sleep(43200)
&lt;/pre&gt;&lt;/div&gt;

&lt;a href=&#34;https://gist.github.com/byzantime/2bcacc490ec96ed483a5&#34;&gt;View on Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To use this, you will need a funded Bitstamp account with an API key setup allowing the script to query balance and place sell orders.
Suggested improvements would include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;increasing the price checking frequency - &lt;code&gt;sleep(21600)&lt;/code&gt; would give you a 6hr resolution&lt;/li&gt;
&lt;li&gt;message logging / email sending&lt;/li&gt;
&lt;li&gt;replace scheduling by running script as cron job, with celery, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mandatory disclaimer:
The code is licensed under the &lt;a href=&#34;http://opensource.org/licenses/MIT&#34;&gt;MIT license&lt;/a&gt; and does not claim to be fit for any purpose.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>